openapi: 3.0.0
info:
  title: credential-svc-sw
  version: 1.0.0
servers:
  - url: https://dev.api.credentials.smartworld.com
  - url: https://uat.api.credentials.smartworld.com
  - url: https://api.credentials.smartworld.com
  - url: http://localhost:8080
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
paths:
  /api/demo-auth/external/auth:
    post:
      tags:
        - General
      summary: auth token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                username: aladmin
                password: password
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/credentials/v1/credential:
    post:
      tags:
        - General
      summary: Credential creation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                is_private: false
                approve: 'no'
                pdf_buffer: base64:pdf...
                credential_type: AlManhal2020
                template_ref: al-manhal-2020
                group_name: Batch2021
                checksum: ''
                recipient:
                  name: Mkhululi Ncube
                  email: mkhululi.ncube@smartworld.com
                  mobile_no: '+971555967105'
                  name_ar: ''
                  emirate_id: 784-1989-0575192-5
                  public_key: ''
                credential_info:
                  - id: '12'
                    term: '3'
                    grade: '4'
                    result: '23'
                    school_en: Gems
                    emirate_en: Dubai
                    issue_date: 12-12-2020
                    printed_on: 12-12-2020
                    subject_name: Maths
                    academic_year: '2021'
                    birth_city_en: Dubai
                    school_arabic: Dubai
                    emirate_arabic: string
                    student_name_en: Mukka
                    subject_name_ar: Maths
                    birth_country_en: 12-12-2021
                    birth_city_arabic: Dubai
                    student_name_arabic: Mukka
                    birth_country_arabic: UAE
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Credential successfully created
          content:
            application/json:
              schema:
                $ref: '#/definitions/CredentialCreationSuccess'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/definitions/ErrorFetchCredentials'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/definitions/InternalServerError'
  /api/credentials/v1/credential/{credential_id}:          
    get:
      tags:
        - General
      summary: Credential details by id
      security:
        - bearerAuth: []
      parameters:
        - name: credential_id
          in: path
          required: true
          schema:
            type: string
          example: '7a968ffc3e'
      responses:
        '200':
          description: credential details for the provided id
          content: 
            application/json:
              schema:
                $ref: '#/definitions/CredentialResponse'
        '400':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/definitions/ErrorFetchCredential'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/definitions/InternalServerError'
  /api/credentials/v1/list:
    get:
      tags:
        - General
      summary: List credentials
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
        - name: perPage
          in: query
          schema:
            type: integer
          example: '2'
        - name: sortBy
          in: query
          schema:
            type: integer
          example: 'name'
        - name: sort
          in: query
          schema:
            type: integer
          example: 'asc'
        - name: name
          in: query
          schema:
            type: string
          example: 'John'
        - name: email
          in: query
          schema:
            type: string
          example: 'johndoe@smartworld.ae'
        - name: issue_date
          in: query
          schema:
            type: string
          example: '23-11-2020'
        - name: expiry_date
          in: query
          schema:
            type: string
          example: '23-11-2020'
        - name: group_name
          in: query
          schema:
            type: string
          example: 'almanhal-2020'
        - name: status
          in: query
          schema:
            type: string
          example: 'published'
        # - in: query
        #   name: fields
        #   style: deepObject
        #   allowReserved: true
        #   schema:
        #     type: object
        #     properties:
        #       credential_type:
        #         type: string
        #       template_id:
        #         type: string
        #       group_id:
        #         type: string
        #       status:
        #         type: string
        # - in: query
        #   name: sort
        #   schema:
        #     type: array
        #     items:
        #       type: string
        #       enum:
        #         - status
      responses:
        '200':
          description: credentials in group to be returned
          content: 
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/definitions/CredentialListResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/definitions/ErrorFetchCredentials'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/definitions/InternalServerError'
  /api/credentials/v1/groups:
    get:
      tags:
        - General
      summary: List groups
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
        - name: perPage
          in: query
          schema:
            type: integer
          example: '2'
        - name: sortBy
          in: query
          schema:
            type: integer
          example: 'name'
        - name: sort
          in: query
          schema:
            type: integer
          example: 'asc'
        - name: group_name
          in: query
          schema:
            type: string
          example: 'Al Manhal 2021'
        - name: group_id
          in: query
          schema:
            type: string
          example: 'al-manhal-2021'
        - name: status
          in: query
          schema:
            type: string
          example: 'published'
      responses:
        '200':
          description: Groups to be returned
          content: 
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/definitions/GroupListResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/definitions/ErrorFetchCredentials'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/definitions/InternalServerError'
  /api/credentials/v1/group/{group_name}:
    get:
      tags:
        - General
      summary: List credentials in a group
      security:
        - bearerAuth: []
      parameters:
        - name: group_name
          in: path
          required: true
          schema:
            type: string
          example: 'almanhal-2020'
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
        - name: perPage
          in: query
          schema:
            type: integer
          example: '2'
        - name: sortBy
          in: query
          schema:
            type: integer
          example: 'name'
        - name: sort
          in: query
          schema:
            type: integer
          example: 'asc'
        - name: name
          in: query
          schema:
            type: string
          example: 'John'
        - name: email
          in: query
          schema:
            type: string
          example: 'johndoe@smartworld.ae'
        - name: issue_date
          in: query
          schema:
            type: string
          example: '23-11-2020'
        - name: expiry_date
          in: query
          schema:
            type: string
          example: '23-11-2020'
        - name: status
          in: query
          schema:
            type: string
          example: 'published'
        # - in: query
        #   name: fields
        #   style: deepObject
        #   allowReserved: true
        #   schema:
        #     type: object
        #     properties:
        #       credential_type:
        #         type: string
        #       template_id:
        #         type: string
        #       status:
        #         type: string
        # - in: query
        #   name: sort
        #   schema:
        #     type: array
        #     items:
        #       type: string
        #       enum:
        #         - status
      responses:
        '200':
          description: credentials in group to be returned
          content: 
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/definitions/CredentialListResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/definitions/ErrorFetchCredentials'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/definitions/InternalServerError'
definitions:
  CredentialResponse:
    type: object
    properties:
      issuer_id:
        type: string
      issuer_name:
        type: string
      issuer_profile_url:
        type: string
      credential_id:
        type: string
      credential_profile_url:
        type: string
      credential_type:
        type: string
      template_id:
        type: string
      transaction_id:
        type: string
      group_name:
        type: string
      issue_date:
        type: string
      expiry_date:
        type: string
      status:
        type: string
  CredentialListResponse:
    type: object
    properties:
      credential_id:
        type: string
      name:
        type: string
      email:
        type: string
      issue_date:
        type: string
      expiry_date:
        type: string
      status:
        type: string
  GroupListResponse:
    type: object
    properties:
      group_id:
        type: string
      group_name:
        type: string
      processing:
        type: integer
      published:
        type: integer
      revoked:
        type: integer
      status:
        type: string
      total:
        type: integer
  CredentialCreationSuccess:
    type: object
    properties:
      credential_id:
        type: string
      checksum:
        type: string
  NotFoundError:
    type: object
    properties:
      message:
        type: string
      status:
        type: number
  InternalServerError:
    type: object
    properties:
      message:
        type: string
      status:
        type: number
  BadRequestError:
    type: object
    properties:
      message:
        type: string
      status:
        type: number
  ErrorFetchCredential:
    type: object
    properties:
      message:
        type: string
      status:
        type: number
  ErrorFetchCredentials:
    type: object
    properties:
      message:
        type: string
      status:
        type: number